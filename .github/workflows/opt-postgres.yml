# needed because the postgres container does not provide a health check
# use postgres for the host here because we have specified a container for the job.
# If we were running the job on the VM this would be localhost
# '>-' is a special YAML syntax and means that new lines would be replaced with spaces
# and new lines from the end would be removed

name: Modified Flowable Postgres Build
env:
  MAVEN_ARGS: -Dmaven.javadoc.skip=true -B -V --no-transfer-progress -Dhttp.keepAlive=false
    -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120
jobs:
  test_postgres:
    name: test_postgres (${{ matrix.postgres }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        postgres:
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_PASSWORD: flowable
          POSTGRES_USER: flowable
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5 --tmpfs /var/lib/postgresql/data:rw
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-test_postgres (${{ matrix.postgres }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/flowable-engine/flowable-engine', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - uses: actions/setup-java@v3
      with:
        distribution: zulu
        java-version: 17
    - run: touch optcd-4.txt
    - name: Test
      run: ./mvnw clean install ${MAVEN_ARGS} -PcleanDb,postgresql,distro -P'!include-spring-boot-samples'
        -Djdbc.url=jdbc:postgresql://localhost:${{ job.services.postgres.ports[5432]
        }}/flowable -Djdbc.username=flowable -Djdbc.password=flowable -Djdbc.driver=org.postgresql.Driver
        -Dspring.datasource.url=jdbc:postgresql://localhost:${{ job.services.postgres.ports[5432]
        }}/flowable -Dspring.datasource.username=flowable -Dspring.datasource.password=flowable
        -Dmaven.test.redirectTestOutputToFile=false
    - run: touch optcd-5.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-test_postgres (${{ matrix.postgres }})
        path: /home/runner/inotifywait-log-test_postgres (${{ matrix.postgres }}).csv
'on':
- push
- workflow_dispatch
